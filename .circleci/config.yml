version: 2

jobs:
  build:

    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/fake-user-app

    steps:
      - checkout
      - run:
          name: Create Directory
          command: mkdir -p ~/fake-user-app

      - restore_cache:
          keys:
            - fake-user-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Build
          command: mvn clean package -DskipTests

      - save_cache:
          paths:
            - ~/.m2
          key: fake-user-dependencies-{{ checksum "pom.xml" }}

      - persist_to_workspace:
          root: ~/fake-user-app
          paths:
            - .

  docker-image-create-and-push:

    machine: true

    steps:
      - attach_workspace:
          at: ~/fake-user-app
      - run:
          name: Go to app location
          command: cd ~/fake-user-app
      - run:
          name: Create Docker image
          command: docker build -t 309373202297.dkr.ecr.eu-west-2.amazonaws.com/fake-user-app:latest ~/fake-user-app
      - run:
          name: Login to ECR
          command: aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 309373202297.dkr.ecr.eu-west-2.amazonaws.com
      - run:
          name: Push the image to ECR
          command: docker push 309373202297.dkr.ecr.eu-west-2.amazonaws.com/fake-user-app:latest

  deploy_prod:
    machine: true

    steps:
      - run:
          name: Execute Deployment Script
          command: |
            ssh -o "StrictHostKeyChecking=no" ubuntu@ec2-18-134-160-90.eu-west-2.compute.amazonaws.com <<'ENDSSH'
            /bin/bash bin/deploy_image.sh
            ENDSSH

workflows:

  version: 2

  build_and_deploy:
    jobs:
      - build
      - docker-image-create-and-push:
          requires:
            - build
      - deploy_prod:
          requires:
            - docker-image-create-and-push
